#!/bin/bash
#set -x

function gotoWindow  {
  if [ -z "$TMUX" ]; then
    tmux -u attach-session -t $SESSION_ID:$WINDOW_ID 2> /dev/null
  else
    tmux -u switch-client -t $SESSION_ID:$WINDOW_ID 2> /dev/null
  fi
}

function saveIdeFile  {
  echo -n "" > $IDE_FILE
  echo "export SESSION_ID='$SESSION_ID'" >> $IDE_FILE
  echo "export WINDOW_ID='$WINDOW_ID'" >> $IDE_FILE
}

ACTION=$1

if [ -d "$1" ]; then
  PROJECT_PATH=$1
  ACTION=$2
  cd $PROJECT_PATH
fi

tmux start-server

# Try to load previously launched ide
mkdir -p /tmp/muxide/$USER
IDE_FILE=/tmp/muxide/$USER/$(md5 <<< $(pwd))
if [ -f $IDE_FILE ]; then
  source $IDE_FILE
  if [ "$ACTION" == "stop" ]; then
    # TODO: just close current window if window belongs to a muxide project and no path specified?
    tmux kill-window -t $SESSION_ID:$WINDOW_ID 2> /dev/null && exit || \
      echo "Project not started." && exit -1
  else
    gotoWindow && exit
  fi
else
  if [ "$ACTION" == "stop" ]; then
    echo "Project not started."
    exit -1
  fi
fi

# Not in tmux
if [ -z "$TMUX" ]; then
  SESSION_ID=$(tmux new-session -d -P -F '#{session_id}')
  WINDOW_ID=$(tmux display-message -t $SESSION_ID:0 -p '#{window_id}')
else
  SESSION_ID=$(tmux display-message -p '#{session_id}')
  PANES_IN_CURRENT_WINDOW=$(tmux list-panes | wc -l | awk '{print $1}')
  # use current window
  if [ $PANES_IN_CURRENT_WINDOW -eq 1 ]; then
    #WINDOW_ID=$(tmux display-message -p '#{window_id}')
    #tmux send-keys cd\ "$PROJECT_PATH" C-m
    OLD_WINDOW_ID=$(tmux display-message -p '#{window_id}')
  fi
  # create new window
  WINDOW_ID=$(tmux new-window -d -t $SESSION_ID -P -F '#{window_id}')
fi

saveIdeFile

#echo $SESSION_ID
PROJECT_NAME=$(basename $(pwd))
tmux rename-window -t $SESSION_ID:$WINDOW_ID $PROJECT_NAME

# Run pre command
if [ -f docker-compose.yml ]; then
  boot2docker up && $(boot2docker shellinit) > /dev/null
fi

if [ -f Procfile ]; then
  CMD='foreman start'
fi

#tmux send-keys -t $SESSION_ID:$WINDOW_ID.0 '' C-m
tmux send-keys -t $SESSION_ID:$WINDOW_ID.0 vim\ -c\ \"NERDTreeToggle\" C-m

tmux splitw -t $SESSION_ID:$WINDOW_ID
tmux select-layout -t $SESSION_ID:$WINDOW_ID 1adc,204x67,0,0\{124x67,0,0,15,79x67,125,0\[79x33,125,0,16,79x33,125,34,17\]\} &> /dev/null


#tmux send-keys -t $SESSION_ID:$WINDOW_ID.1 '' C-m

tmux splitw -t $SESSION_ID:$WINDOW_ID
tmux select-layout -t $SESSION_ID:$WINDOW_ID 1adc,204x67,0,0\{124x67,0,0,15,79x67,125,0\[79x33,125,0,16,79x33,125,34,17\]\} &> /dev/null

#tmux send-keys -t $SESSION_ID:$WINDOW_ID.2 '' C-m
tmux send-keys -t $SESSION_ID:$WINDOW_ID.2 "$CMD" C-m

tmux select-layout -t $SESSION_ID:0 1adc,204x67,0,0\{124x67,0,0,15,79x67,125,0\[79x33,125,0,16,79x33,125,34,17\]\} &> /dev/null

tmux select-pane -t $SESSION_ID:$WINDOW_ID.0

tmux select-window -t $SESSION_ID:$WINDOW_ID

gotoWindow
